class Solution:
    # @param A : tuple of integers
    # @param B : tuple of integers
    # @param C : tuple of integers
    # @return an integer
    def solve(self, A, B, C):
        dp = [0]*(max(A)+1)
        friends = A
        capacity = B
        cost = C
        for i in range(1,len(dp)):
            for cap_index in range(len(capacity)):
                curr_cap = capacity[cap_index]
                curr_cost = cost[cap_index]
                
                if dp[i]==0:
                    if curr_cap==i:
                        dp[i] = curr_cost
                    elif i-curr_cap>0:
                        dp[i] = curr_cost + dp[i-curr_cap]
                else:
                    if i-curr_cap>=0:
                        dp[i] = min(dp[i],dp[i-curr_cap]+curr_cost)
        
        ans = 0
        for friend in friends:
            ans += dp[friend]
        
        return ans
